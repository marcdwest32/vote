{"ast":null,"code":"import _defineProperty from \"/home/marc/immersion/vote/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/marc/immersion/vote/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/marc/immersion/vote/client/src/components/polls/PollForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-undef */\nimport React, { useState, useContext } from 'react';\nimport PollContext from '../../context/poll/pollContext';\n\nconst PollForm = () => {\n  const pollContext = useContext(PollContext);\n\n  const _useState = useState({\n    question: '',\n    option1: '',\n    option2: '',\n    option3: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        poll = _useState2[0],\n        setPoll = _useState2[1];\n\n  const question = poll.question,\n        option1 = poll.option1,\n        option2 = poll.option2,\n        option3 = poll.option3;\n\n  const onChange = e => setPoll(_objectSpread({}, poll, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    pollContext;\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Survey The People\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Question\",\n    name: \"question\",\n    value: question,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Option1\",\n    name: \"option1\",\n    value: option1,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Option2\",\n    name: \"option2\",\n    value: option2,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Option3\",\n    name: \"option3\",\n    value: option3,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add Poll\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n};\n\nexport default PollForm;","map":{"version":3,"sources":["/home/marc/immersion/vote/client/src/components/polls/PollForm.js"],"names":["React","useState","useContext","PollContext","PollForm","pollContext","question","option1","option2","option3","poll","setPoll","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAMC,WAAW,GAAGH,UAAU,CAACC,WAAD,CAA9B;;AADsB,oBAGEF,QAAQ,CAAC;AAChCK,IAAAA,QAAQ,EAAE,EADsB;AAEhCC,IAAAA,OAAO,EAAE,EAFuB;AAGhCC,IAAAA,OAAO,EAAE,EAHuB;AAIhCC,IAAAA,OAAO,EAAE;AAJuB,GAAD,CAHV;AAAA;AAAA,QAGfC,IAHe;AAAA,QAGTC,OAHS;;AAAA,QAUdL,QAVc,GAU0BI,IAV1B,CAUdJ,QAVc;AAAA,QAUJC,OAVI,GAU0BG,IAV1B,CAUJH,OAVI;AAAA,QAUKC,OAVL,GAU0BE,IAV1B,CAUKF,OAVL;AAAA,QAUcC,OAVd,GAU0BC,IAV1B,CAUcD,OAVd;;AAYtB,QAAMG,QAAQ,GAAGC,CAAC,IAAIF,OAAO,mBAAMD,IAAN;AAAY,KAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAtC,KAA7B;;AAEC,QAAMC,QAAQ,GAAGJ,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACK,cAAF;AACAb,IAAAA,WAAW;AACZ,GAHD;;AAKD,SACC;AAAM,IAAA,QAAQ,EAAEY,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAEC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,WAAW,EAAC,UAFb;AAGC,IAAA,IAAI,EAAC,UAHN;AAIC,IAAA,KAAK,EAAEX,QAJR;AAKC,IAAA,QAAQ,EAAEM,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EASC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,WAAW,EAAC,SAFb;AAGC,IAAA,IAAI,EAAC,SAHN;AAIC,IAAA,KAAK,EAAEL,OAJR;AAKC,IAAA,QAAQ,EAAEK,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,EAgBC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,WAAW,EAAC,SAFb;AAGC,IAAA,IAAI,EAAC,SAHN;AAIC,IAAA,KAAK,EAAEJ,OAJR;AAKC,IAAA,QAAQ,EAAEI,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBD,EAuBC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,WAAW,EAAC,SAFb;AAGC,IAAA,IAAI,EAAC,SAHN;AAIC,IAAA,KAAK,EAAEH,OAJR;AAKC,IAAA,QAAQ,EAAEG,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBD,EA8BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,KAAK,EAAC,UAFP;AAGC,IAAA,SAAS,EAAC,2BAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CA9BD,CADD;AAwCA,CA3DD;;AA6DA,eAAeR,QAAf","sourcesContent":["/* eslint-disable no-undef */\nimport React, { useState, useContext } from 'react';\nimport PollContext from '../../context/poll/pollContext';\n\nconst PollForm = () => {\n\tconst pollContext = useContext(PollContext);\n\n\tconst [poll, setPoll] = useState({\n\t\tquestion: '',\n\t\toption1: '',\n\t\toption2: '',\n\t\toption3: '',\n\t});\n\n\tconst { question, option1, option2, option3 } = poll;\n\n\tconst onChange = e => setPoll({ ...poll, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    pollContext\n  }\n\n\treturn (\n\t\t<form onSubmit={onSubmit}>\n\t\t\t<h2 className='text-primary'>Survey The People</h2>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Question'\n\t\t\t\tname='question'\n\t\t\t\tvalue={question}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Option1'\n\t\t\t\tname='option1'\n\t\t\t\tvalue={option1}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Option2'\n\t\t\t\tname='option2'\n\t\t\t\tvalue={option2}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Option3'\n\t\t\t\tname='option3'\n\t\t\t\tvalue={option3}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tvalue='Add Poll'\n\t\t\t\t\tclassName='btn btn-primary btn-block'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default PollForm;\n"]},"metadata":{},"sourceType":"module"}