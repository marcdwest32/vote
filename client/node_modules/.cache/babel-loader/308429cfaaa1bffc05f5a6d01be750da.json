{"ast":null,"code":"import _slicedToArray from \"/home/marc/immersion/vote/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/marc/immersion/vote/client/src/context/poll/PollState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport pollContext from './pollContext';\nimport pollReducer from './pollReducer';\nimport { ADD_POLL, DELETE_POLL, SET_CURRENT, CLEAR_CURRENT, UPDATE_POLL, FILTER_POLLS, CLEAR_FILTER } from '../types';\n\nconst PollState = props => {\n  const initialState = {\n    polls: [{\n      id: 1,\n      question: 'Why are we here?',\n      option1: 'Because',\n      option2: 'Jesus',\n      option3: 'Dinosaurs',\n      option1vote: 0,\n      option2vote: 0,\n      option3vote: 0,\n      current: null\n    }, {\n      id: 1,\n      question: 'Who died for our sins?',\n      option1: 'Jesus',\n      option2: 'Lee Harvey Oswald',\n      option3: 'Dinosaurs',\n      option1vote: 0,\n      option2vote: 0,\n      option3vote: 0,\n      current: null\n    }, {\n      id: 1,\n      question: 'Who would make a better President?',\n      option1: 'Bobcat Goldthwait',\n      option2: 'Jesus',\n      option3: 'Dinosaurs',\n      option1vote: 0,\n      option2vote: 0,\n      option3vote: 0,\n      current: null\n    }]\n  };\n\n  const _useReducer = useReducer(pollReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Add Poll\n\n\n  const addPoll = poll => {\n    poll.id = uuid.v4();\n    dispatch({\n      type: ADD_POLL,\n      payload: poll\n    });\n  }; // Delete Poll\n\n\n  const deletePoll = id => {\n    dispatch({\n      type: DELETE_POLL,\n      payload: id\n    });\n  }; // Set Current\n\n\n  const setCurrent = poll => {\n    dispatch({\n      type: SET_CURRENT\n    });\n  }; // Clear Current\n  // Update Poll\n  // Filter Polls\n  // Clear Filter\n\n\n  return React.createElement(pollContext.Provider, {\n    value: {\n      polls: state.polls,\n      addPoll,\n      deletePoll\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default PollState;","map":{"version":3,"sources":["/home/marc/immersion/vote/client/src/context/poll/PollState.js"],"names":["React","useReducer","uuid","pollContext","pollReducer","ADD_POLL","DELETE_POLL","SET_CURRENT","CLEAR_CURRENT","UPDATE_POLL","FILTER_POLLS","CLEAR_FILTER","PollState","props","initialState","polls","id","question","option1","option2","option3","option1vote","option2vote","option3vote","current","state","dispatch","addPoll","poll","v4","type","payload","deletePoll","setCurrent","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACCC,QADD,EAECC,WAFD,EAGCC,WAHD,EAICC,aAJD,EAKCC,WALD,EAMCC,YAND,EAOCC,YAPD,QAQO,UARP;;AAUA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACpBC,IAAAA,KAAK,EAAE,CACN;AACCC,MAAAA,EAAE,EAAE,CADL;AAECC,MAAAA,QAAQ,EAAE,kBAFX;AAGCC,MAAAA,OAAO,EAAE,SAHV;AAICC,MAAAA,OAAO,EAAE,OAJV;AAKCC,MAAAA,OAAO,EAAE,WALV;AAMCC,MAAAA,WAAW,EAAE,CANd;AAOCC,MAAAA,WAAW,EAAE,CAPd;AAQCC,MAAAA,WAAW,EAAE,CARd;AASCC,MAAAA,OAAO,EAAE;AATV,KADM,EAYN;AACCR,MAAAA,EAAE,EAAE,CADL;AAECC,MAAAA,QAAQ,EAAE,wBAFX;AAGCC,MAAAA,OAAO,EAAE,OAHV;AAICC,MAAAA,OAAO,EAAE,mBAJV;AAKCC,MAAAA,OAAO,EAAE,WALV;AAMCC,MAAAA,WAAW,EAAE,CANd;AAOCC,MAAAA,WAAW,EAAE,CAPd;AAQCC,MAAAA,WAAW,EAAE,CARd;AASCC,MAAAA,OAAO,EAAE;AATV,KAZM,EAuBN;AACCR,MAAAA,EAAE,EAAE,CADL;AAECC,MAAAA,QAAQ,EAAE,oCAFX;AAGCC,MAAAA,OAAO,EAAE,mBAHV;AAICC,MAAAA,OAAO,EAAE,OAJV;AAKCC,MAAAA,OAAO,EAAE,WALV;AAMCC,MAAAA,WAAW,EAAE,CANd;AAOCC,MAAAA,WAAW,EAAE,CAPd;AAQCC,MAAAA,WAAW,EAAE,CARd;AASCC,MAAAA,OAAO,EAAE;AATV,KAvBM;AADa,GAArB;;AAD0B,sBAuCAvB,UAAU,CAACG,WAAD,EAAcU,YAAd,CAvCV;AAAA;AAAA,QAuCnBW,KAvCmB;AAAA,QAuCZC,QAvCY,oBAyC1B;;;AACA,QAAMC,OAAO,GAAGC,IAAI,IAAI;AACvBA,IAAAA,IAAI,CAACZ,EAAL,GAAUd,IAAI,CAAC2B,EAAL,EAAV;AACAH,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEzB,QAAR;AAAkB0B,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACA,GAHD,CA1C0B,CA+C1B;;;AACA,QAAMI,UAAU,GAAGhB,EAAE,IAAI;AACxBU,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAExB,WAAR;AAAqByB,MAAAA,OAAO,EAAEf;AAA9B,KAAD,CAAR;AACA,GAFD,CAhD0B,CAoD1B;;;AACA,QAAMiB,UAAU,GAAGL,IAAI,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEvB;AAAR,KAAD,CAAR;AACA,GAFD,CArD0B,CAyD1B;AAEA;AAEA;AAEA;;;AAEA,SACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNQ,MAAAA,KAAK,EAAEU,KAAK,CAACV,KADP;AAENY,MAAAA,OAFM;AAGNK,MAAAA;AAHM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOEnB,KAAK,CAACqB,QAPR,CADD;AAWA,CA5ED;;AA8EA,eAAetB,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport pollContext from './pollContext';\nimport pollReducer from './pollReducer';\nimport {\n\tADD_POLL,\n\tDELETE_POLL,\n\tSET_CURRENT,\n\tCLEAR_CURRENT,\n\tUPDATE_POLL,\n\tFILTER_POLLS,\n\tCLEAR_FILTER,\n} from '../types';\n\nconst PollState = props => {\n\tconst initialState = {\n\t\tpolls: [\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tquestion: 'Why are we here?',\n\t\t\t\toption1: 'Because',\n\t\t\t\toption2: 'Jesus',\n\t\t\t\toption3: 'Dinosaurs',\n\t\t\t\toption1vote: 0,\n\t\t\t\toption2vote: 0,\n\t\t\t\toption3vote: 0,\n\t\t\t\tcurrent: null,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tquestion: 'Who died for our sins?',\n\t\t\t\toption1: 'Jesus',\n\t\t\t\toption2: 'Lee Harvey Oswald',\n\t\t\t\toption3: 'Dinosaurs',\n\t\t\t\toption1vote: 0,\n\t\t\t\toption2vote: 0,\n\t\t\t\toption3vote: 0,\n\t\t\t\tcurrent: null,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tquestion: 'Who would make a better President?',\n\t\t\t\toption1: 'Bobcat Goldthwait',\n\t\t\t\toption2: 'Jesus',\n\t\t\t\toption3: 'Dinosaurs',\n\t\t\t\toption1vote: 0,\n\t\t\t\toption2vote: 0,\n\t\t\t\toption3vote: 0,\n\t\t\t\tcurrent: null,\n\t\t\t},\n\t\t],\n\t};\n\n\tconst [state, dispatch] = useReducer(pollReducer, initialState);\n\n\t// Add Poll\n\tconst addPoll = poll => {\n\t\tpoll.id = uuid.v4();\n\t\tdispatch({ type: ADD_POLL, payload: poll });\n\t};\n\n\t// Delete Poll\n\tconst deletePoll = id => {\n\t\tdispatch({ type: DELETE_POLL, payload: id });\n\t};\n\n\t// Set Current\n\tconst setCurrent = poll => {\n\t\tdispatch({ type: SET_CURRENT})\n\t}\n\n\t// Clear Current\n\n\t// Update Poll\n\n\t// Filter Polls\n\n\t// Clear Filter\n\n\treturn (\n\t\t<pollContext.Provider\n\t\t\tvalue={{\n\t\t\t\tpolls: state.polls,\n\t\t\t\taddPoll,\n\t\t\t\tdeletePoll,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</pollContext.Provider>\n\t);\n};\n\nexport default PollState;\n"]},"metadata":{},"sourceType":"module"}