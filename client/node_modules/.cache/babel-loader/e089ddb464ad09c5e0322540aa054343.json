{"ast":null,"code":"import _defineProperty from \"/home/marc/immersion/vote/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_POLL, DELETE_POLL, SET_CURRENT, CLEAR_CURRENT, UPDATE_POLL, FILTER_POLLS, CLEAR_FILTER } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_POLL:\n      return _objectSpread({}, state, {\n        polls: [...state.polls, action.payload]\n      });\n\n    case DELETE_POLL:\n      return _objectSpread({}, state, {\n        polls: state.polls.filter(poll => poll.id !== action.payload)\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        polls: state.polls.map(poll => {\n          if (poll.id === action.payload.id) {\n            poll.current = 1;\n          } else {}\n        })\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/marc/immersion/vote/client/src/context/poll/pollReducer.js"],"names":["ADD_POLL","DELETE_POLL","SET_CURRENT","CLEAR_CURRENT","UPDATE_POLL","FILTER_POLLS","CLEAR_FILTER","state","action","type","polls","payload","filter","poll","id","map","current"],"mappings":";;;;;;AAAA,SACCA,QADD,EAECC,WAFD,EAGCC,WAHD,EAICC,aAJD,EAKCC,WALD,EAMCC,YAND,EAOCC,YAPD,QAQO,UARP;AAUA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,QAAL;AACC,+BACIO,KADJ;AAECG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACG,OAAxB;AAFR;;AAID,SAAKV,WAAL;AACC,+BACIM,KADJ;AAECG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYE,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACG,OAA9C;AAFR;;AAID,SAAKT,WAAL;AACC,+BACIK,KADJ;AAECG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYK,GAAZ,CAAgBF,IAAI,IAAI;AAC9B,cAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACG,OAAP,CAAeG,EAA/B,EAAmC;AAClCD,YAAAA,IAAI,CAACG,OAAL,GAAe,CAAf;AACA,WAFD,MAEO,CAEN;AACD,SANM;AAFR;;AAUD;AACC,aAAOT,KAAP;AAvBF;AAyBA,CA1BD","sourcesContent":["import {\n\tADD_POLL,\n\tDELETE_POLL,\n\tSET_CURRENT,\n\tCLEAR_CURRENT,\n\tUPDATE_POLL,\n\tFILTER_POLLS,\n\tCLEAR_FILTER,\n} from '../types';\n\nexport default (state, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_POLL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpolls: [...state.polls, action.payload],\n\t\t\t};\n\t\tcase DELETE_POLL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpolls: state.polls.filter(poll => poll.id !== action.payload),\n\t\t\t};\n\t\tcase SET_CURRENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpolls: state.polls.map(poll => {\n\t\t\t\t\tif (poll.id === action.payload.id) {\n\t\t\t\t\t\tpoll.current = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}